{"version":3,"file":"static/js/367.b97d423e.chunk.js","mappings":"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","sources":["api/mfl.js","components/TeamInput.jsx","components/routes/HomePage.jsx","store/store.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// TODO: this is a temp key. A more concrete solution should be looked into here\r\nexport const get = async (endpoint) => {\r\n    try {\r\n        const response = await axios.get(`https://proxy.cors.sh/https://api.myfantasyleague.com/2024/${endpoint}`, {\r\n            headers: {\r\n                'x-cors-api-key': 'temp_6f97c4476f4a07d8c0096946c4cf465f',\r\n            }\r\n        })\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Error in API request');\r\n    }\r\n};\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/App.css\";\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\nimport {useStore} from \"../store/store\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport superFlexRankings from \"../resources/players/sf_dynasty_ranks_rbb.csv\";\r\nimport Papa from \"papaparse\";\r\nimport { get } from '../api/mfl.js';\r\n\r\n\r\nexport default function TeamInput() {\r\n    const leagueProvider = useStore(state => state.leagueProvider);\r\n    const setLeagueProvider = useStore(state => state.setLeagueProvider);\r\n    const username = useStore(state => state.username);\r\n    const setUsername = useStore(state => state.setUsername);\r\n    const userId = useStore(state => state.userId);\r\n    const setUserId = useStore(state => state.setUserId);\r\n    const leagueId = useStore(state => state.leagueId);\r\n    const setLeagueId = useStore(state => state.setLeagueId);\r\n    const setLeagueTeams = useStore(state => state.setLeagueTeams);\r\n    const setSFPlayers = useStore(state => state.setSFPlayers);\r\n    const [mflTeamObj, setmflTeamObj] = useState([]);\r\n    const [leagues, setLeagues] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // get data from csv\r\n        fetch(superFlexRankings).then(response => response.text()).then(text => {\r\n            Papa.parse(text, {\r\n                header: true,\r\n                complete: results => {\r\n                    setSFPlayers(results.data);\r\n                }\r\n            });\r\n        });\r\n\r\n    }, );\r\n\r\n    useEffect(() => {\r\n        const fetchRosterData = async () => {\r\n            try {\r\n                const rosterDataResponse = await get(`export?TYPE=rosters&L=${leagueId}&APIKEY=&FRANCHISE=&W=&JSON=1`);\r\n                const leaguePlayersResponse = await get(`export?TYPE=players&L=${leagueId}&APIKEY=&DETAILS=&SINCE=&PLAYERS=&JSON=1`)\r\n                let oldMFLTeamsObj = mflTeamObj;\r\n                // Get the rosters for all of the teams\r\n                oldMFLTeamsObj.forEach(x => {\r\n                    // Get a team's roster\r\n                    const playerRoster = rosterDataResponse.rosters.franchise.find(r => r.id === x.owner_id).player;\r\n                    // Change ids to player_name\r\n                    playerRoster.forEach(pr => {\r\n                        const lp = leaguePlayersResponse.players.player.find(p => p.id === pr.id);\r\n                        const name = lp.name.replaceAll(\"DEVY\", \"\").replaceAll(\"*\", \"\").split(\", \");\r\n                        pr.player_name = name[1] + \" \" + name[0];\r\n                        pr.position = lp.position;\r\n                    })\r\n                    x.players = playerRoster;\r\n                })\r\n                setLeagueTeams(mflTeamObj);\r\n                navigate('/evaluate-team');\r\n            } catch (error) {\r\n                toastr.error(\"There was a problem with your request. See console\")\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        if (leagueId !== \"\" && mflTeamObj.length > 0) {\r\n            fetchRosterData();\r\n        }\r\n    }, [mflTeamObj, leagueId, setLeagueTeams, navigate]);\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            // Get leagues on Sleeper\r\n            const url = `https://api.sleeper.app/v1/user/${userId}/leagues/nfl/2024`; // Replace with your desired URL\r\n\r\n            fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n                    throw new Error('Network response was not ok.');\r\n                })\r\n                .then(data => {\r\n                    // Handle the data from the response\r\n                    toastr.success('League Data Obtained')\r\n                    setLeagues(data.map(x => {\r\n                        return {league_id: x.league_id, league_name: x.name}\r\n                    }));\r\n                })\r\n                .catch(error => {\r\n                    // Handle any errors that occurred during the fetch request\r\n                    toastr.info(`There was an error doing your request`);\r\n                    console.error(error);\r\n                });\r\n        }\r\n    }, [userId]);\r\n\r\n    function submitForm() {\r\n        if (leagueProvider === \"1\") {\r\n            // Obtain user id from Sleeper\r\n            const url = `https://api.sleeper.app/v1/user/${username}`; // Replace with your desired URL\r\n\r\n            fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n                    throw new Error('Network response was not ok.');\r\n                })\r\n                .then(data => {\r\n                    // Handle the data from the response\r\n                    setUserId(data.user_id);\r\n                })\r\n                .catch(error => {\r\n                    // Handle any errors that occurred during the fetch request\r\n                    toastr.info(`There was an error doing your request`);\r\n                    console.error(error);\r\n                });\r\n        } else {\r\n            toastr.info(\"This mode may take a bit\")\r\n\r\n            const fetchLeagueData = async () => {\r\n                try {\r\n                    const response = await get(`export?TYPE=league&L=${leagueId}&APIKEY=&JSON=1`);\r\n                    setmflTeamObj(response.league.franchises.franchise.map(x => {\r\n                        return { owner_name: x.name, owner_id: x.id, players: [], isMFL: true }\r\n                    }))\r\n                    toastr.success(\"Success!!!\")\r\n                } catch (error) {\r\n                    toastr.error(\"There was a problem with your request. See console\")\r\n                    console.error(error);\r\n                }\r\n            };\r\n\r\n            fetchLeagueData();\r\n        }\r\n\r\n    }\r\n\r\n    function getLeagueRosters() {\r\n        // Get leagues on Sleeper\r\n        const url = `https://api.sleeper.app/v1/league/${leagueId}/rosters`; // Replace with your desired URL\r\n\r\n        fetch(url)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Network response was not ok.');\r\n            })\r\n            .then(data => {\r\n                // Handle the data from the response\r\n                toastr.success('League Roster Data Obtained');\r\n                setLeagueTeams(data);\r\n                navigate('/evaluate-team');\r\n            })\r\n            .catch(error => {\r\n                // Handle any errors that occurred during the fetch request\r\n                toastr.info(`There was an error doing your request`);\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    return userId ? (<div>\r\n        <select className=\"form-select my-2\" aria-label=\"Select League\" onChange={e => setLeagueId(e.target.value)}>\r\n            <option value=\"\" defaultValue>Select League</option>\r\n            ${leagues.map(x => (<option value={x.league_id} key={x.league_id}>{x.league_name}</option>))}\r\n        </select>\r\n        <button className=\"btn btn-primary\" onClick={getLeagueRosters}>Rank Teams</button>\r\n    </div>) : (\r\n        <div>\r\n            <select className=\"form-select my-2\" aria-label=\"League Provider\" onChange={e => setLeagueProvider(e.target.value)}>\r\n                <option value=\"\" defaultValue>Select League Provider</option>\r\n                <option value=\"1\">Sleeper</option>\r\n                <option value=\"2\">MFL</option>\r\n            </select>\r\n            {leagueProvider === \"1\" && (\r\n                <div className=\"input-group flex-nowrap my-2\">\r\n                    <span className=\"input-group-text\" id=\"addon-wrapping\">@</span>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"addon-wrapping\" onChange={e => setUsername(e.target.value)} />\r\n                </div>\r\n            )}\r\n            {leagueProvider === \"2\" && (\r\n                <div className=\"input-group flex-nowrap my-2\">\r\n                    <span className=\"input-group-text\" id=\"addon-wrapping\">#</span>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"League ID\" aria-label=\"League ID\" aria-describedby=\"addon-wrapping\" onChange={e => setLeagueId(e.target.value)} />\r\n                </div>\r\n            )}\r\n            <div className=\"my-2\">\r\n                <button className=\"btn btn-primary\" type=\"submit\" onClick={submitForm}>Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"../../styles/App.css\";\r\nimport TeamInput from \"../TeamInput\";\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center vh-100 bg-dark\">\r\n            <h2>Welcome to the team evaluator!</h2>\r\n            <h5>Using the RBB rankings, you can see how your team stacks up against your other league mates</h5>\r\n            <TeamInput />\r\n        </div>\r\n    );\r\n}","import { create } from \"zustand\";\r\n\r\nexport const useStore = create((set, get) => ({\r\n\tusername: \"\",\r\n\r\n\tsetUsername: (newUser) => set(() => ({\r\n\t\tusername: newUser,\r\n\t})),\r\n\r\n\tuserId: null,\r\n\r\n\tsetUserId: (newUserId) => set(() => ({\r\n\t\tuserId: newUserId,\r\n\t})),\r\n\r\n\t// 1 = Sleeper 2 = MFL\r\n\tleagueProvider: null,\r\n\r\n\tsetLeagueProvider: (newLeagueProvider) => set(() => ({\r\n\t\tleagueProvider: newLeagueProvider,\r\n\t})),\r\n\r\n\t// For Sleeper/MFL\r\n\tleagueId: \"\",\r\n\r\n\tsetLeagueId: (newLeagueId) => set(() => ({\r\n\t\tleagueId: newLeagueId,\r\n\t})),\r\n\r\n\t// League Teams with Rosters\r\n\tleagueTeams: [],\r\n\r\n\tsetLeagueTeams: (newLeagueTeams) => set(() => ({\r\n\t\tleagueTeams: newLeagueTeams,\r\n\t})),\r\n\r\n\tsfPlayers: [],\r\n\r\n\tsetSFPlayers: (newPlayers) => set(() => ({\r\n\t\tsfPlayers: newPlayers,\r\n\t})),\r\n}));"],"names":["get","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","response","wrap","_context","prev","next","axios","concat","headers","sent","abrupt","data","t0","Error","stop","_x","apply","arguments","TeamInput","leagueProvider","useStore","state","setLeagueProvider","username","setUsername","userId","setUserId","leagueId","setLeagueId","setLeagueTeams","setSFPlayers","_useState","useState","_useState2","_slicedToArray","mflTeamObj","setmflTeamObj","_useState3","_useState4","leagues","setLeagues","navigate","useNavigate","useEffect","fetch","superFlexRankings","then","text","Papa","header","complete","results","fetchRosterData","rosterDataResponse","leaguePlayersResponse","forEach","x","playerRoster","rosters","franchise","find","r","id","owner_id","player","pr","lp","players","p","name","replaceAll","split","player_name","position","toastr","console","error","length","url","ok","json","map","league_id","league_name","catch","_jsxs","children","className","onChange","e","target","value","_jsx","defaultValue","onClick","type","placeholder","user_id","fetchLeagueData","_ref2","_callee2","_context2","league","franchises","owner_name","isMFL","HomePage","create","set","newUser","newUserId","newLeagueProvider","newLeagueId","leagueTeams","newLeagueTeams","sfPlayers","newPlayers"],"sourceRoot":""}